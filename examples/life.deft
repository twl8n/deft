 main:	
{		
     naive_make_col('x_cord','101..109');
     naive_make_col('y_cord','101..110');
#    naive_make_col('x_cord','101..105');
#    naive_make_col('y_cord','101..106');
    #read_tab_data("life.dat", x_cord, y_cord);
    $position = $y_cord . $x_cord;
    $state = int(rand(2));
    $step = 1;
    if ($step < 100)
    {
	# Noah's version
	# do_iter($x_cord, $y_cord, $step);
	do_iter($x_cord, $y_cord, $step, $state, $position);
    }
}

sub do_iter($x_cord, $y_cord, $step, $state, $position)
{
    # $fname = "life_out_$step.txt";
    $fname = "-";
    $template = "./life_display.txt";
    render("fname","template");
    
    $neighbor = $state;
    $x_n = $x_cord;
    $y_n = $y_cord;

    # See common_lib.pl
    rerel();

#     self_select('state as neighbor, x_cord as x_n, y_cord as y_n',
# 		'abs($x_n - $x_cord) < 2 && abs($y_n - $y_cord) < 2 && ($y_n != $y_cord || $x_n != $x_cord)');	


    # Do we need the crush_on now that Deft removes dup records?
    crush_on('sum', 'x_cord,y_cord', 'neighbor');

    if ($neighbor == 3) 
    {
	$state = 1;
    }
    else
    {
	if (($neighbor < 2) || ($neighbor > 3))
	{
	    $state = 0;
	}
    }
    $step++;

    if ($step && $step < 11)
    {
	do_iter($x_cord, $y_cord, $step, $state, $position );
    }
}

